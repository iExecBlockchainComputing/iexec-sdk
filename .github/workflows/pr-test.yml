name: PR test

on: [pull_request]

concurrency:
  group: ${{ github.ref }}-pr-test
  cancel-in-progress: true

jobs:
  check-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci && npm run codegen

      - name: Check format
        run: npm run check-format

      - name: Lint
        run: npm run lint

  test-node-18:
    uses: ./.github/workflows/reusable-test.yml
    with:
      node-version: '18'
      upload-coverage: true
    secrets:
      infura-project-id: ${{ secrets.INFURA_PROJECT_ID }}
      etherscan-api-key: ${{ secrets.ETHERSCAN_API_KEY }}
      alchemy-api-key: ${{ secrets.ALCHEMY_API_KEY }}

  sonar:
    runs-on: ubuntu-latest
    needs: test-node-18
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          artifact-ids: ${{ needs.test-node-18.outputs.coverage-artifact-id }}
          path: coverage

      - name: SonarScanner
        uses: SonarSource/sonarqube-scan-action@v5.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  npm-dry-run:
    # TODO use tagged version
    uses: iExecBlockchainComputing/github-actions-workflows/.github/workflows/publish-npm.yml@feat/npm-publish-dry-run
    with:
      install-command: npm ci
      build-command: npm run build
      dry-run: true

  docker-dry-run:
    # TODO use tagged version
    uses: iExecBlockchainComputing/github-actions-workflows/.github/workflows/docker-build.yml@docker-build-fixes
    with:
      image-name: 'iexechub/iexec-sdk'
      push: false
      security-scan: false
